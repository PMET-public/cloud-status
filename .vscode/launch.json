{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Host update on project yye7pupverdpa (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "host:update",
        "yye7pupverdpa:twe",
        "-v"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Host update an invalid project (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "host:update",
        "pid:env",
        "-v"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Host update sample (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "host:update",
        "-vs"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Match hosts and envs",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "host:env-match",
        "-v"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Generate css for cloud",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "cloud:gen-css",
        "-v"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Smoke test all applications (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:smoke-test",
        "-av"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Smoke test untested applications (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:smoke-test",
        "-uv"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Smoke test sample demo project (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:smoke-test",
        "-v",
        "apwjqamdbjquw:master",
        "-t",
        "0"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Smoke test sample ref project (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:smoke-test",
        "-v",
        "xy4itwbmg2khk:master",
        "-t",
        "0"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Back up env (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:backup",
        "-v",
        "p3ajtccyn5j3w:Demo"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Check web for all envs (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:check-web-status",
        "-a"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Check web for sample envs (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:check-web-status",
        "-v",
        "n7nbrkm6byryw:master", //gdprlmsp3syac:sales-demo
        "-t",
        "0"
      ]
    },
    {
      "type": "node",
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Update sample project",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:update",
        "-v",
        "bjxvwp2ir32iw",
        "-t",
        "0"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Update all projects",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:update",
        "-va"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Exec a sample script in a sample env",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:exec",
        "-v",
        "./bin/env-scripts/what-is-my-external-ip.sh",
        "apwjqamdbjquw:maa"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Exec a sample sql in a sample env",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:exec",
        "-v",
        "./bin/env-scripts/shopial.sql",
        "qcfa655arkgce"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "mcm no args",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": []
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Exec a sample SQL file in a sample env",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:exec",
        "-v",
        "/tmp/hello-world.sql"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Get a sample file env",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:get",
        "-v",
        "/tmp/khb",
        "2ld3hijuc7lve",
        "v5mgc5i33x26m"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Redeploy a sample env with no changes (forced)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:deploy",
        "--force",
        "a6terwtbk67os:smiletest"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Redeploy a sample env using tar file",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "cwd": "/Users/kbentrup/Documents/ese/mc/",
      "args": [
        "env:deploy",
        "b2b.tar",
        "dg24rqlsvsuqw",
        "-v",
        "--reset",
        "--yes"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Redeploy a sample env using a shell script",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:deploy",
        "fix-routes-and-services.sh",
        "exkfyxnbu3zke:NextProj",
        "-v",
        "--reset",
        "--yes"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Redeploy expiring envs",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:deploy",
        "-vx"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Sync envs testing master patterns",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:sync",
        "xy4itwbmg2khk",
        "xy4itwbmg2khk:master",
        "xy4itwbmg2khk:test2",
        "xy4itwbmg2khk:test3"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Sync env",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:sync",
        "6iqrsmlqhxefq:East"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "(Re)set IP access",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:set-ip-access",
        "6iqrsmlqhxefq:master"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Find all activities failures (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:find-failures",
        "-va"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Find activities failures on invalid pid (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:find-failures",
        "-v",
        "invalid-pid"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Find activities failures on valid pid (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:find-failures",
        "-v",
        "-t",
        "0",
        "34gqyvr5hijbu"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Grant all gitlab keys access to all configured gitlab projects(verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:grant-gitlab",
        "-va"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Grant cloud project access to all configured gitlab projects (verbose)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "project:grant-gitlab",
        "-v",
        "ugwphl3msex5e"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Delete inactive envs",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:delete",
        "-vi"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Check app version of sample pid(s)",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "env:check-app-version",
        "-v",
        "-t 0",
        "rft4g4olbri4q:master",
        "vjacyav2sflo6",
        "evndbcag3hlna"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "User add",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "user:add",
        "-v",
        "kbentrup@magento.com",
        "admin",
        "a6terwtbk67os",
        "vjacyav2sflo6"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "User delete",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "user:delete",
        "-v",
        "skukla@magento.com",
        "36fjujtek7d7m"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Variable set",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "variable:set",
        "-v",
        "COMPOSER_AUTH",
        "kbentrup@magento.com",
        //"a6terwtbk67os",
        "vjacyav2sflo6"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Variable get",
      "program": "${workspaceFolder}/cli/bin/mcm",
      "args": [
        "variable:get",
        "-v",
        "COMPOSER_AUTH",
        //"a6terwtbk67os",
        "vjacyav2sflo6"
      ]
    },
    {
      "type": "node",
      "runtimeExecutable": "${workspaceFolder}/select-node.sh",
      "outputCapture": "std",
      "request": "launch",
      "name": "Run mocha",
      "cwd": "${workspaceFolder}/cli",
      "program": "${workspaceFolder}/cli/node_modules/mocha/bin/_mocha",
      "args": [
        "-b",
        "--timeout",
        "15000"
      ]
    },
    {
      "type": "node",
      "request": "attach",
      "name": "Attach to debugging server process",
      "stopOnEntry": false,
      "port": 9229,
      "address": "localhost",
      "restart": true,
      "sourceMaps": false,
      "outFiles": [],
      "localRoot": "${workspaceRoot}/server",
      "remoteRoot": "${workspaceRoot}/server"
    },
    {
      "name": "Chrome",
      "type": "chrome",
      "request": "launch",
      "url": "http://localhost:3000",
      "webRoot": "${workspaceRoot}/client/src",
      "userDataDir": "/Users/kbentrup/Library/Application Support/Google/Chrome/Profile 1"
    },
    {
      "type": "node",
      "outputCapture": "std",
      "request": "launch",
      "name": "del me",
      "program": "${workspaceFolder}/cli/bin/mcm2",
      "args": [
        "c1",
        "should cause failure"
      ]
    },
  ]
}